#!/usr/bin/env sh
# direnvsh - Load .envrc files into shell from parent directories
# Copyright (C) 2022  Peter Willis
# shellcheck disable=SC1090,SC2016,SC2003

DIRENVSH_VER="0.1"
set -eu ; [ "${DEBUG:-0}" = "1" ] && set -x

_rloadfiles_recurse_precedence () {
    direnvsh_level=$((${direnvsh_level:--1}+1))
    if [ "${DIRENVSH_STOP:-0}" = "1" ] || [ -e "$1/.stopdirenvsh" ] ; then
        printf "%s: Found '%s', ending processing\n" "$0" "$1/.stopdirenvsh" 1>&2
        return
    fi
    [ ! "$3" = "far" ] || _rloadfiles_recurse_order "$1" "$2" "$3" "$4"
    _rloadfile "$1" "$2"
    direnvsh_level=$((direnvsh_level-1))
    [ ! "$3" = "close" ] || _rloadfiles_recurse_order "$1" "$2" "$3" "$4"
}
_rloadfiles_recurse_order () {
    if [ ! "$1" = "/" ] ; then
        if [ "$4" = "backward" ] ; then
            _rloadfiles_recurse_precedence "$(dirname "$1")" "$2" "$3" "$4"
        elif [ "$4" = "forward" ] ; then
            for _dir in "$1"/* ; do
                [ -d "$_dir" ] || continue
                _rloadfiles_recurse_precedence "$_dir" "$2" "$3" "$4"
            done
        fi
    fi
}
_rloadfile () {
    direnvsh_cwd="$1" direnvsh_file="$2"
    trap _cleanup_tmp EXIT
    set -a # export all variables set after here
    if [ -e "$direnvsh_cwd/$direnvsh_file" ] ; then
        printf "%s: Loading envrc '%s'\n" "$0" "$direnvsh_cwd/$direnvsh_file" 1>&2
        if [ "${DIRENVSH_EXPORT_MODE}" = "1" ] ; then
            env -i sh -c "unset SHLVL PWD; set -a; . \"$direnvsh_cwd/$direnvsh_file\"; export -p" >> "$tmpfile"
        elif [ "${DIRENVSH_IMMEDIATE_MODE}" = "1" ] ; then
            . "$direnvsh_cwd/$direnvsh_file"
        elif [ "${DIRENVSH_SIMPLE_MODE}" = "1" ] ; then
            _readkv < "$direnvsh_cwd/$direnvsh_file"
        fi
    fi
}
_readkv () {
    while IFS='=' read -r key val; do
        # Skip comments
        [ "${key##\#*}" ] || continue
        #printf "%s: Found k=v '%s=%s'\n" "$0" "$key" "$val" 1>&2
        set +e
        # Replace text '${FOO}' with value of '$FOO'
        _replaceval_ind "$key" "$val" '^.*${[a-zA-Z0-9_]\+}' '^.*${\([a-zA-Z0-9_]\+\)}.*$'
        # Replace text '$FOO' with value of '$FOO'
        _replaceval_ind "$key" "$val" '^.*$[a-zA-Z0-9_]\+' '^.*$\([a-zA-Z0-9_]\+\).*$'
        set -e
    done
}
_replaceval_ind () {
    _k="$1" _v="$2" _idxregex="$3" _regex="$4" _matchidx='' _match='' _new='' _idx='' _begin='' _end=''
    while : ; do
        _matchidx="$(expr "$_v" : "$_idxregex")"
        if [ ! "$_matchidx" = "0" ] ; then
            _match="$(expr "$_v" : "$_regex")"
            eval _new="\${$_match:-}"
            _idx=$((_matchidx-(${#_match}+1)))
            _begin="$(expr substr "$_v" 1 $_idx)"
            _end="$(expr substr "$_v" $((_matchidx+1)) 99999999)"
            _v="${_begin}${_new}${_end}"
            export "$_k=$_v"
        else
            export "$_k=$_v"
            break
        fi
    done
}
_cleanup_tmp () {
    if [ "${NO_CLEANUP_TMP_ON_ERROR:-0}" = "1" ] ; then
        printf "%s: Error detected; not cleaning up '%s'\n" "$0" "${tmpfile:-}" 1>&2
    else
        if [ "${NO_CLEANUP_TMP:-0}" = "1" ] ; then
            printf "%s: Not cleaning up '%s'\n" "$0" "${tmpfile:-}" 1>&2
        elif [ -n "${tmpfile:-}" ] ; then
            rm -f "$tmpfile"
        fi
    fi
}
_direnvsh_help () {
    echo "Usage: $0 [OPTIONS] [--] [COMMAND ..]"
    echo ""
    echo "Loads a .envrc file from current and parent/child directories into the shell."
    echo "If COMMAND and any arguments are passed, they are executed."
    echo ""
    echo "Options:"
    echo "  -S            Simple mode (default): only parse files with line-by-line KEY=VALUE entries"
    echo "                instead of loading the file into the shell. Interpolates environment variables."
    echo "                The ENVRC is set to .env unless otherwise specified."
    echo ""
    echo "  -I            Immediate mode: load each file into the shell session immediately."
    echo "                The ENVRC is set to .envrc unless otherwise specified."
    echo ""
    echo "  -E            Export mode: use a subshell to export each .envrc and only load values"
    echo "                into the shell after all exported variables are concatenated."
    echo "                The ENVRC is set to .envrc unless otherwise specified."
    echo ""
    echo "  -D DIRECTION  Direction to walk directories for files: 'backward' (default), 'forward'"
    echo "  -P ORDER      Precedence of file loading: 'far' (default), 'close'"
    echo ""
    echo "  -F ENVRC      Load files named ENVRC rather than '.envrc'"
    echo "  -h            This screen"
    echo "  -v            Enable debug mode (DEBUG=1)"
    echo "  -V            Version of direnvsh"
    exit 1
}

DIRENVSH_SHOW_HELP=0
DIRENVSH_SIMPLE_MODE="${DIRENVSH_SIMPLE_MODE:-1}"
DIRENVSH_IMMEDIATE_MODE="${DIRENVSH_IMMEDIATE_MODE:-0}"
DIRENVSH_EXPORT_MODE="${DIRENVSH_EXPORT_MODE:-0}"
# Don't set DIRENVSH_DIRECTION default until after DIRENVSH_PRECEDENCE has been passed
TMPDIR="${TMPDIR:-/tmp}" # POSIX standard temp dir

while getopts "SIED:P:F:hvV" args ; do
    case $args in
        S)  DIRENVSH_SIMPLE_MODE=1 DIRENVSH_IMMEDIATE_MODE=0 DIRENVSH_EXPORT_MODE=0 ;;
        I)  DIRENVSH_SIMPLE_MODE=0 DIRENVSH_IMMEDIATE_MODE=1 DIRENVSH_EXPORT_MODE=0 ;;
        E)  DIRENVSH_SIMPLE_MODE=0 DIRENVSH_IMMEDIATE_MODE=0 DIRENVSH_EXPORT_MODE=1 ;;
        D)  DIRENVSH_DIRECTION="$OPTARG" ;;
        P)  DIRENVSH_PRECEDENCE="$OPTARG" ;;
        F)  ENVRC="$OPTARG" ;;
        h)  DIRENVSH_SHOW_HELP=1 ;;
        v)  DEBUG=1 ;;
        V)  printf "%s\n" "$DIRENVSH_VER" ; exit 0 ;;
        *)  printf "%s: Error: unknown option '%s'\n" "$0" "$args" 1>&2 ; _direnvsh_help ;;
    esac
done
shift $((OPTIND-1))

[ "${DIRENVSH_SHOW_HELP}" = "1" ] && _direnvsh_help
[ "${DEBUG:-0}" = "1" ] && set -x

[ "${DIRENVSH_SIMPLE_MODE}" = "1" ] && ENVRC="${ENVRC:-.env}"
[ "${DIRENVSH_IMMEDIATE_MODE}" = "1" ] && ENVRC="${ENVRC:-.envrc}"
[ "${DIRENVSH_EXPORT_MODE}" = "1" ] && ENVRC="${ENVRC:-.envrc}"

DIRENVSH_DIRECTION="${DIRENVSH_DIRECTION:-backward}"
[ "${DIRENVSH_DIRECTION}" = "backward" ] && DIRENVSH_PRECEDENCE="${DIRENVSH_PRECEDENCE:-far}"
[ "${DIRENVSH_DIRECTION}" = "forward" ] && DIRENVSH_PRECEDENCE="${DIRENVSH_PRECEDENCE:-close}"

if [ "${DIRENVSH_EXPORT_MODE}" = "1" ] ; then
    tmpfile="$(mktemp "$TMPDIR/direnvsh.XXXXXXXXXX")"
fi

_rloadfiles_recurse_precedence "$(pwd)" "$ENVRC" "$DIRENVSH_PRECEDENCE" "$DIRENVSH_DIRECTION"

if [ "${DIRENVSH_EXPORT_MODE}" = "1" ] ; then
    . "$tmpfile"
    rm -f "$tmpfile"
fi

# If there were command-line options left, execute them
[ $# -lt 1 ] || exec "$@"
